name: CI/CD Pipeline

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]

# Declare explicit permissions to avoid write-all default
permissions:
  contents: read
  pull-requests: read
  checks: write
  id-token: write # Needed for GCP auth

env:
  PROJECT_ID: trading-system-demo-464911
  REGION: us-central1

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Setup environment
        run: make setup

      - name: Run quality gates
        run: make quality-gate

      - name: Build binaries
        run: make build

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./coverage.out

  # Build and Push Images - Only for deployable branches and PRs
  build-images:
    needs: quality-gate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set PR environment variable
      if: github.event_name == 'pull_request'
      run: echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker authentication
      run: make auth-docker

    - name: Build and push Docker images
      run: make docker-push

  # Deploy to Preview Environment - Only for PRs
  deploy-preview:
    needs: build-images
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    environment: preview
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set PR environment variable
      run: echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to preview
      run: make deploy-preview

    - name: Comment PR with preview URLs
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = process.env.PR_NUMBER;
          const comment = `ðŸš€ **Preview Environment Deployed**

          **Pipeline Service**: [View Service](https://console.cloud.google.com/run/detail/us-central1/trading-pipeline-pr-${prNumber})
          **Strategy Service**: [View Service](https://console.cloud.google.com/run/detail/us-central1/trading-strategy-pr-${prNumber})

          Health check endpoints:
          - Pipeline: \`curl $(gcloud run services describe trading-pipeline-pr-${prNumber} --region=us-central1 --format="value(status.url)")/health\`
          - Strategy: \`curl $(gcloud run services describe trading-strategy-pr-${prNumber} --region=us-central1 --format="value(status.url)")/health\`

          This preview will be automatically cleaned up when the PR is merged or closed.`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # Deploy to Staging - Only when pushing to develop
  deploy-staging:
    needs: build-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to staging
      run: make deploy-staging

  # Deploy to Production - Only when pushing to master
  deploy-production:
    needs: build-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to production
      run: make deploy-prod

  # Cleanup Preview Environment - When PR is closed
  cleanup-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set PR environment variable
      run: echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Cleanup preview environment
      run: make cleanup-preview